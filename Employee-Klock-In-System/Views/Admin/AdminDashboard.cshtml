@model Employee_Klock_In_System.Models.ViewModels.AdminDashboardViewModel
@{
	ViewData["Title"] = "Admin Dashboard";
	Layout = null; // Or use your layout if desired
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<title>@ViewData["Title"]</title>
	<style>
		body {
			margin: 0;
			font-family: Arial, sans-serif;
			background-color: #f3f4f6;
		}

		.sidebar {
			width: 240px;
			height: 100vh;
			overflow-y: auto;
			background-color: white;
			box-shadow: 2px 0 5px rgba(0,0,0,0.1);
			padding: 20px;
			position: fixed;
			display: flex;
			flex-direction: column;
			padding-bottom: 30px;
		}

			.sidebar img {
				width: 40px;
				height: 40px;
				border-radius: 50%;
			}

			.sidebar h2 {
				margin: 0;
				font-size: 16px;
			}

			.sidebar p {
				margin: 0;
				color: #6b7280;
				font-size: 14px;
			}

			.sidebar nav {
				flex-grow: 1;
				margin-bottom: 10px;
			}

			.sidebar a {
				display: flex;
				align-items: center;
				gap: 10px;
				padding: 12px 16px;
				text-decoration: none;
				color: #374151;
				border-radius: 6px;
				margin-bottom: 10px;
			}
				.sidebar a.logout-btn {	

					margin-top: auto;
					display: flex;
					align-items: center;
					gap: 10px;
					padding: 12px 16px;
					color: #374151;
					text-decoration: none;
					border-radius: 6px;
					margin-bottom: 30px;
				}

				.sidebar a.active,
				.sidebar a:hover {
					background-color: #f3f4f6;
				}

		.main-content {
			margin-left: 260px;
			padding: 30px;
		}

		.card {
			background-color: white;
			padding: 20px;
			border-radius: 8px;
			border: 1px solid #e5e7eb;
			margin-bottom: 20px;
		}

			.card h2 {
				margin-top: 0;
			}

		.flex {
			display: flex;
			justify-content: space-between;
			align-items: center;
		}

		.grid {
			display: grid;
			gap: 20px;
		}

		.grid-2 {
			grid-template-columns: repeat(2, 1fr);
		}

		.grid-4 {
			grid-template-columns: repeat(4, 1fr);
		}

		.recent-item {
			border-bottom: 1px solid #e5e7eb;
			padding: 10px 0;
		}

			.recent-item:last-child {
				border: none;
			}
	</style>
</head>

<body>
	<div class="sidebar">
		<div class="flex" style="align-items: center; gap: 10px; margin-bottom: 30px;">
			<img src="https://api.dicebear.com/7.x/notionists/svg?scale=200&seed=admin" />
			<div>
				<p style="color: #6b7280; font-size: 14px;">Welcome back</p>
				<p>@Model.Admin.FullName</p>
			</div>
		</div>

		<nav>
			<a asp-action="RedirectToDashboard" asp-controller="Home" class="active">Dashboard</a>
			<a asp-action="ViewAllEmployees">View All Employees</a>
			<a asp-action="AttendanceRecords">Attendance Records</a>
			<a asp-action="ManageLeaveRequests">Manage Leave Requests</a>
			<a asp-action="AddEmployee">Add New Employee</a>
		</nav>
		<a asp-controller="Home" asp-action="Logout" class="logout-btn">Logout</a>
	</div>

	<div class="main-content">
		<h1 style="font-size: 24px; margin-bottom: 20px;">Admin Dashboard Overview</h1>

		<div class="grid grid-4">
			<div class="card">
				<h2>Total Employees</h2>
				<p style="font-size: 24px;">@Model.TotalEmployees</p>
			</div>
			<div class="card">
				<h2>Active Today</h2>
				<p style="font-size: 24px;">@Model.ActiveToday</p>
			</div>
			<div class="card">
				<h2>Pending Leaves</h2>
				<p style="font-size: 24px;">@Model.PendingLeaves</p>
			</div>
			<div class="card">
				<h2>Avg Weekly Hours</h2>
				<p style="font-size: 24px;">@Model.AverageWeeklyHours.ToString("0.0")</p>
			</div>
		</div>

		<div class="grid grid-2">
			<div class="card">
				<h2>Today's Activity</h2>
				@if (Model.TodayActivity.Any())
				{
					@foreach (var activity in Model.TodayActivity)
					{
						<div class="recent-item">
							<strong>@activity.Employee.FullName</strong><br />
							<small>Checked in at @activity.CheckInTime.ToString("hh:mm tt")</small>
						</div>
					}
				}
				else
				{
					<p>No check-ins today.</p>
				}
			</div>

			<div class="card">
				<h2>Weekly Overview</h2>
				<div class="flex" style="gap: 10px;">
					@{
						var days = new[] { "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun" };
						foreach (var day in days)
						{
							var height = Model.WeeklyGraphData.TryGetValue(day, out var hours)
							? (int)(hours / 15.0 * 100)
							: 0;
						}
					}
					@foreach (var day in days)
					{
						<div style="text-align: center;">
							<div style="height: 100px; width: 12px; background-color: #e5e7eb; position: relative;">
								@if (Model.WeeklyGraphData.TryGetValue(day, out var hours) && hours > 0)
								{
									<div style="position: absolute; bottom: 0; height: @(hours / 15.0 * 100)%; width: 100%; background-color: #6b7280;"></div>
								}
							</div>
							<p style="font-size: 12px;">@day</p>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
</body>
</html>
